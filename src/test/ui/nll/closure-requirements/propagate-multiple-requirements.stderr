error[E0373]: closure may outlive the current function, but it borrows `local_arr`, which is owned by the current function
  --> $DIR/propagate-multiple-requirements.rs:12:10
   |
LL |     once(|mut z: &[i32], mut out_val: &mut &[i32]| {
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ may outlive borrowed value `local_arr`
...
LL |         z = &local_arr;
   |              --------- `local_arr` is borrowed here
   |
note: closure is returned here
  --> $DIR/propagate-multiple-requirements.rs:18:5
   |
LL |     *out
   |     ^^^^
help: to force the closure to take ownership of `local_arr` (and any other referenced variables), use the `move` keyword
   |
LL |     once(move |mut z: &[i32], mut out_val: &mut &[i32]| {
   |          ++++

error: aborting due to previous error

For more information about this error, try `rustc --explain E0373`.
