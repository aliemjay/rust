error: lifetime may not live long enough
  --> $DIR/issue-98589-closures-relate-named-regions.rs:10:10
   |
LL | fn test_early_early<'a: 'a, 'b: 'b>() {
   |                     --      -- lifetime `'b` defined here
   |                     |
   |                     lifetime `'a` defined here
LL |     || { None::<&'a &'b ()>; };
   |          ^^^^^^^^^^^^^^^^^^ requires that `'b` must outlive `'a`
   |
   = help: consider adding the following bound: `'b: 'a`

error: lifetime may not live long enough
  --> $DIR/issue-98589-closures-relate-named-regions.rs:15:10
   |
LL | fn test_early_late<'a: 'a, 'b>() {
   |                    --      -- lifetime `'b` defined here
   |                    |
   |                    lifetime `'a` defined here
LL |     || { None::<&'a &'b ()>; };
   |          ^^^^^^^^^^^^^^^^^^ requires that `'b` must outlive `'a`
   |
   = help: consider adding the following bound: `'b: 'a`

error: lifetime may not live long enough
  --> $DIR/issue-98589-closures-relate-named-regions.rs:21:10
   |
LL | fn test_late_late<'a, 'b>() {
   |                   --  -- lifetime `'b` defined here
   |                   |
   |                   lifetime `'a` defined here
LL |     || { None::<&'a &'b ()>; };
   |          ^^^^^^^^^^^^^^^^^^ requires that `'b` must outlive `'a`
   |
   = help: consider adding the following bound: `'b: 'a`

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/issue-98589-closures-relate-named-regions.rs:26:10
   |
LL |     || { None::<&'a T>; };
   |          ^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds
   |
help: consider adding an explicit lifetime bound...
   |
LL | fn test_early_type<'a: 'a, T: 'a>() {
   |                             ++++

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/issue-98589-closures-relate-named-regions.rs:32:10
   |
LL |     || { None::<&'a T>; };
   |          ^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds
   |
help: consider adding an explicit lifetime bound...
   |
LL | fn test_late_type<'a, T: 'a>() {
   |                        ++++

error[E0716]: temporary value dropped while borrowed
  --> $DIR/issue-98589-closures-relate-named-regions.rs:38:8
   |
LL | fn test_closure_arg<'a: 'a>() {
   |                     -- lifetime `'a` defined here
LL |     let f = |_: &'a str| {};
LL |     f(&String::new());
   |     ---^^^^^^^^^^^^^-- temporary value is freed at the end of this statement
   |     |  |
   |     |  creates a temporary which is freed while still in use
   |     argument requires that borrow lasts for `'a`

error: aborting due to 6 previous errors

Some errors have detailed explanations: E0309, E0716.
For more information about an error, try `rustc --explain E0309`.
